name: "Install boost"
description: "Build or retrieve boost & set paths"
inputs:
  version:
    description: "Version of boost to install"
    required: false
  download-url:
    description: "Where to download the archive from"
    required: false
  variant:
    description: "Variants to build"
    required": false
    default: debug,release
  toolset:
    description: "Toolset to use"
    required: true
  runtime-link:
    description: "How to link the runtime library"
    required: false
  threading:
    description: "Threading mode to use"
    required: false
  link:
    description: "How to link boost"
    required: false
  cxxstd:
    description: "C++ standard to use (restricts which libraries are built)"
    required: false
  address-model:
    description: "Address-model"
    required: false
  stdlib:
    description: "Standard library to use"
    required: false
  install-dir:
    description: "Where to install boost"
    required: false
    default: ${{ github.workspace }}/boost-install
outputs:
  boostdir:
    description: "Path at which boost was installed"
    value: ${{ env.BOOST_DIR }}
defaults:
  run:
    shell: bash
runs:
  using: "composite"
  steps:
    - name: Setup defaults
      shell: bash
      run: |
        echo B2_VARIANT="${{ inputs.variant != '' && format('variant={0}', inputs.variant) || '' }}" >> $GITHUB_ENV
        echo B2_TOOLSET="${{ inputs.toolset != '' && format('toolset={0}', inputs.toolset) || '' }}" >> $GITHUB_ENV
        echo B2_RUNTIME="${{ inputs.runtime-link != '' && format('runtime-link={0}', inputs.runtime-link) || '' }}" >> $GITHUB_ENV
        echo B2_THREADING="${{ inputs.threading != '' && format('threading={0}', inputs.threading) || '' }}" >> $GITHUB_ENV
        echo B2_LINK="${{ inputs.link != '' && format('link={0}', inputs.link) || '' }}" >> $GITHUB_ENV
        echo B2_CXXSTD="${{ inputs.cxxstd != '' && format('cxxstd={0}', inputs.cxxstd) || '' }}" >> $GITHUB_ENV
        echo B2_ADDRESSMODEL="${{ inputs.address-model != '' && format('address-model={0}', inputs.address-model) || '' }}" >> $GITHUB_ENV
        echo B2_STDLIB="${{ inputs.stdlib != '' && format('stdlib={0}', inputs.stdlib) || '' }}" >> $GITHUB_ENV

    - name: Setup variables
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        BOOST_TAG="${{ inputs.version == '' && '`gh release view -R boostorg/boost --jq ".name" --json name`' || format('boost-{0}', inputs.version) }}"
        echo BOOST_TAG="$BOOST_TAG" >> $GITHUB_ENV
        BOOST_KEY_RAW="$BOOST_TAG.${{ inputs.toolset }}.${{ inputs.variant }}.${{ inputs.address-model }}.${{ inputs.link }}.${{ inputs.runtime-link }}.${{ inputs.threading }}.${{ inputs.stdlib }}.${{ inputs.cxxstd }}"
        echo BOOST_KEY="${BOOST_KEY_RAW//,/-}" >> $GITHUB_ENV
        echo BOOST_DIR="${{ inputs.install-dir }}" >> $GITHUB_ENV

    - name: Restore boost
      id: restore-boost
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.BOOST_DIR }}
        key: ${{ env.BOOST_KEY }}

    - name: Add MSBuild to PATH
      if: runner.os == 'Windows' && (steps.restore-boost.outputs.cache-hit != 'true')
      uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2

    - name: Download Boost source
      if: (steps.restore-boost.outputs.cache-hit != 'true')
      id: checkout-boost
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        archive='${{ env.BOOST_TAG }}' &&
        gh release download ${{ env.BOOST_TAG }} -R boostorg/boost -p 'boost-*-b2-nodocs.7z' -O "$archive".7z --clobber &&
        7z x "$archive".7z -spe &&
        mv $archive boost

    - name: Build boost
      if: (steps.restore-boost.outputs.cache-hit != 'true')
      shell: bash
      run: |
        ( mkdir -p "$BOOST_DIR" ; true )
        ( cd boost && chmod -R u+x . && ./bootstrap.sh && ./b2 install --prefix="$BOOST_DIR" -d0 -q ${{ env.B2_VARIANT }} ${{ env.B2_TOOLSET }} ${{ env.B2_STDLIB }} ${{ env.B2_ADDRESSMODEL }} ${{ env.B2_RUNTIME }} ${{ env.B2_THREADING }} ${{ env.B2_LINK }} ${{ env.B2_CXXSTD }} )

    - name: Cache boost
      if: (steps.restore-boost.outputs.cache-hit != 'true')
      id: cache-boost
      uses: actions/cache/save@v4
      with:
        path: ${{ env.BOOST_DIR }}
        key: ${{ steps.restore-boost.outputs.cache-primary-key }}
