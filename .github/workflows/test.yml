name: Windows Build
on:
  push:

permissions: read-all

jobs:
  linux-ci:
    name: Linux Test
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os.dist }}-${{ matrix.os.arch }}-(${{ matrix.cfg.version }}-${{ matrix.cfg.variant }}-${{ matrix.cfg.toolset }})
      cancel-in-progress: true
    runs-on: ${{ matrix.os.dist }}-${{ matrix.os.version }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64 ]
        os:
          - { name: 'Ubuntu', dist: 'ubuntu', version: 24.04 }
        cfg:
          - { version: '1.85.0', toolset: 'clang' }
          - { toolset: 'clang', stdlib: 'libc++' }
          - { toolset: 'gcc', variant: 'debug' }
    steps:
      - name: Install apt packages
        if: ${{ startsWith(matrix.cfg.toolset, 'clang') }}
        run: |
            sudo sed -i 's/azure\.//' /etc/apt/sources.list &&
            sudo apt update &&
            sudo apt-get install -y libc++-dev libc++abi-dev

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./
        with:
          version: ${{ matrix.cfg.version }}
          toolset: ${{ matrix.cfg.toolset }}
          variant: ${{ matrix.cfg.variant }}
          stdlib: ${{ matrix.cfg.stdlib }}

  windows-ci:
    name: Windows Test
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os.dist }}-${{ matrix.os.arch }}-(${{ matrix.variant }}-${{ matrix.toolset }})
      cancel-in-progress: true
    strategy:
      fail-fast: false # Don't cancel other matrix jobs if one fails
      matrix:
        arch: [ x64 ]
        os:
          - { name: 'Windows', dist: windows, version: 2022 }
        variant: [ debug, release ]
        toolset: [ msvc ]
    runs-on: ${{ matrix.os.dist }}-${{ matrix.os.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./
        with:
          toolset: ${{ matrix.toolset }}
          variant: ${{ matrix.variant }}
